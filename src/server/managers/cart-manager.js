
module.exports = (() => {
    const nodemailer = require('nodemailer');

    const emailMerchant = process.env.EMAIL_MERCHANT;
    const passwordEmailMerchant = process.env.PASSWORD_MERCHANT;

    let transporter = nodemailer.createTransport({
        host: 'smtp.gmail.com',
        port: 587,
        secure: false, // true for 465, false for other ports
        auth: {
            user: emailMerchant,
            pass: passwordEmailMerchant
        }
    });

    const _generateOrderInfoHtml = orderInfo => {
        let html = '<div><h1>–ü–æ—Ä—ä—á–∞–Ω–∏ –ø—Ä–æ–¥—É–∫—Ç–∏</h1>';

        orderInfo.forEach(product => {
            const productId = product[0];
            const productCount = product[1];

            html += `
                <div>
                    <p><strong>–ü—Ä–æ–¥—É–∫—Ç: </strong> ${productId}</p>
                    <p><strong>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: </strong> ${productCount}</p>
                </div>
            `;
        });

        html += '</div>'
        return html;
    };

    const _generateBuyerInfoHtml = ({ name, phone, email, message }) => {
        return `
            <h1>–ò–º–∞—Ç–µ –Ω–æ–≤–∞ –ø–æ—Ä—ä—á–∫–∞ –æ—Ç '${name}'</h1>
            <p><strong>–¢–µ–ª–µ—Ñ–æ–Ω: </strong>${phone}</p>
            <p><strong>–ú–µ–π–ª: </strong>${email}</p>
            <p><strong>–°—ä–æ–±—â–µ–Ω–∏–µ: </strong>${message}</p>
        `
    };

    const _generateEmailBuyerHtml = userName => {
        return `
            <div>
                <h1>–ó–¥—Ä–∞–≤–µ–π ${userName}, –∏–º–∞—Ç–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤—ä—Ä—à–µ–Ω–∞ –ø–æ—Ä—ä—á–∫–∞!</h1>
                <p>–°–∫–æ—Ä–æ –Ω–∞—à —Å—ä—Ç—Ä—É–¥–Ω–∏–∫ —â–µ —Å–µ —Å–≤—ä—Ä–∂–µ —Å –í–∞—Å –∑–∞ –¥–∞ —Å–µ —É—Ç–æ—á–Ω–∏ –Ω–∞—á–∏–Ω–∞ –Ω–∞ –¥–æ—Å—Ç–∞–≤–∫–∞ –∏ –ø–ª–∞—â–∞–Ω–µ!</p>
                <br>
                <small>–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –í–∏, —á–µ –∏–∑–ø–æ–ª–∑–≤–∞—Ö—Ç–µ –Ω–∞—à–∏—Ç–µ —É—Å–ª—É–≥–∏!</small>
            </div>
        `
    };

    const _generateEmailMerchantHtml = (orderInfo, userInfo) => {
        const orderInfoHtml = _generateOrderInfoHtml(orderInfo);
        const buyerInfoHtml = _generateBuyerInfoHtml(userInfo);
        return `
            <div>
                <section>
                    ${buyerInfoHtml}
                </section>
                </hr>
                <section>
                    ${orderInfoHtml}
                </section>
            </div>
        `
    };

    return {
        sendEmailMerchant: async (orderInfo, userInfo) => {
            const emailMerchantHtml = _generateEmailMerchantHtml(orderInfo, userInfo);

            return await transporter.sendMail({
                from: `"Wazaaa Bro üëª" <${emailMerchant}>`,
                to: emailMerchant,
                subject: `–ù–æ–≤–∞ –ø–æ—Ä—ä—á–∫–∞ –æ—Ç '${userInfo.name}'`,
                html: emailMerchantHtml
            });
        },

        sendEmailBuyer: async (userName, userEmail) => {
            const emailBuyerHtml = _generateEmailBuyerHtml(userName);

            return await transporter.sendMail({
                from: `"You are cool brother üëª" <${emailMerchant}`,
                to: userEmail,
                subject: `–£—Å–ø–µ—à–Ω–æ –∏–∑–≤—ä—Ä—à–µ–Ω–∞ –ø–æ—Ä—ä—á–∫–∞!`,
                html: emailBuyerHtml
            });
        }
    }
})();